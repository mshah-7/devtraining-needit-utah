<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri>/api/x_58872_needit/needit_api/tickets</default_operation_uri>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>Get Tickets</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here
	var answer = [];

    // Get values from the respective query parameters.
    var number = request.queryParams.number;

    // Generate 404 if no query parameters provided.
    if (!number) {
        response.setError(new sn_ws_err.NotFoundError('No query parameters defined.'));
        response.setStatus(404);
        return;
    }

    // Query the Vehicle table using these parameters.
    var vehicleTable = 'x_58872_needit_needit';
    var vehicleGr = new GlideRecordSecure(vehicleTable);
    if (number) { vehicleGr.addQuery('number', number); }
    vehicleGr.query();


    // Generate a 404 if no vehicles were found.
    if (!vehicleGr.hasNext()) {
        response.setError(new sn_ws_err.NotFoundError('No records found.'));
        response.setStatus(404);
        return;
    }

    // For the vehicles found, generate a JSON object and save the vehicle data in it.
    while (vehicleGr.next()) {

        var vehicleObj = {
            "number": vehicleGr.getValue('number'),
            "state": vehicleGr.getValue('state'),
            "priority": vehicleGr.getValue('priority'),
            "short_description": vehicleGr.getValue('short_description'),
            "u_what_needed": vehicleGr.getValue('u_what_needed'),
        };
        answer.push(vehicleObj);
    }

    // Generate the response body.
    response.setBody(answer);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v1/needit_api/tickets</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/tickets</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-03-29 06:01:57</sys_created_on>
        <sys_id>f95a79a0475102105e2797da116d43e1</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Get Tickets</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_f95a79a0475102105e2797da116d43e1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-29 06:07:22</sys_updated_on>
        <web_service_definition display_value="Needit api">f12a39a0475102105e2797da116d4366</web_service_definition>
        <web_service_version display_value="v1">509c75e4475102105e2797da116d4336</web_service_version>
    </sys_ws_operation>
</record_update>
